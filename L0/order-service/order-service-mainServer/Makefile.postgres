.PHONY: up down clean list-db list-tables show-table

include .env

POSTGRES_CONTAINER_NAME := postgres-order-service
STARTUP_TIMEOUT := 30

up:
	@echo "Starting PostgreSQL container..."
	@docker run -d \
		--name $(POSTGRES_CONTAINER_NAME) \
		-p $(POSTGRES_PORT):5432 \
		-e POSTGRES_USER=$(POSTGRES_USER) \
		-e POSTGRES_PASSWORD=$(POSTGRES_PASSWORD) \
		-e POSTGRES_DB=$(POSTGRES_DB) \
		-v pgdata:/var/lib/postgresql/data \
		--health-cmd="pg_isready -U $(POSTGRES_USER) -d $(POSTGRES_DB)" \
		--health-interval=10s \
		--health-timeout=5s \
		--health-retries=5 \
		--health-start-period=15s \
		postgres:latest
	@echo "Waiting for database system to start (timeout: $(STARTUP_TIMEOUT)s...)"
	@timeout $(STARTUP_TIMEOUT) sh -c \
	  'until docker logs $(POSTGRES_CONTAINER_NAME) 2>&1 | grep -q "database system is ready to accept connections"; do \
	    sleep 1; \
	  done' || \
	  (echo "database system failed to start within $(STARTUP_TIMEOUT) seconds"; exit 1)

down:
	@echo "Stopping PostgreSQL container..."
	@-docker stop $(POSTGRES_CONTAINER_NAME)
	@echo "PostgreSQL container stopped"

clean:
	@echo "Performing full cleanup PostgreSQL..."
	@-docker stop $(POSTGRES_CONTAINER_NAME) 2>/dev/null
	@-docker rm -f $(POSTGRES_CONTAINER_NAME) 2>/dev/null || true
	@docker volume rm pgdata 2>/dev/null || true
	@echo "Cleanup PostgreSQL completed"

logs:
	@docker logs -f $(POSTGRES_CONTAINER_NAME)

list-db:
	@echo "Listing databases..."
	@docker exec -it $(POSTGRES_CONTAINER_NAME) psql -U $(POSTGRES_USER) -l

list-tables:
	@echo "Listing tables in database \"$(POSTGRES_DB)\"..."
	@docker exec -it $(POSTGRES_CONTAINER_NAME) psql -U $(POSTGRES_USER) -d $(POSTGRES_DB) -c "\dt"

show-table:
	@echo "Showing 10 rows of table \"$(TABLE)\"..."
	@docker exec -it $(POSTGRES_CONTAINER_NAME) psql -U $(POSTGRES_USER) -d $(POSTGRES_DB) \
	-c "SELECT * FROM $(TABLE) LIMIT 10"