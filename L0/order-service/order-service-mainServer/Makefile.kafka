KAFKA_IMAGE ?= apache/kafka:4.0.0
CONTAINER_NAME ?= kafka
KAFKA_VOLUME ?= kafka_data
CONFIG_FILE ?= $(CURDIR)/config/kafka/server.properties
PORT ?= 9092
CONTROLLER_PORT ?= 9093
STARTUP_TIMEOUT ?= 8

KAFKA_HOME ?= /opt/kafka
KAFKA_CONFIG_DIR ?= $(KAFKA_HOME)/config
KAFKA_BIN_DIR ?= $(KAFKA_HOME)/bin
KAFKA_DATA_DIR ?= /tmp/kafka-data

.PHONY: start stop clean check topics

start:
	@echo "Starting Kafka container with host config file..."
	@mkdir -p $(dir $(CONFIG_FILE))
	@if [ ! -f $(CONFIG_FILE) ]; then \
	  echo "Missing $(CONFIG_FILE), create it with required KRaft settings before start."; \
	  exit 1; \
	fi
	@docker run -d \
	  --name $(CONTAINER_NAME) \
	  -p $(PORT):9092 \
	  -p $(CONTROLLER_PORT):9093 \
	  -v $(KAFKA_VOLUME):$(KAFKA_DATA_DIR) \
	  -v $(CONFIG_FILE):$(KAFKA_CONFIG_DIR)/server.properties \
	  $(KAFKA_IMAGE)
	@echo "Waiting for Kafka to start..."
	@timeout $(STARTUP_TIMEOUT) sh -c \
	  'until docker logs $(CONTAINER_NAME) 2>&1 | grep -q "Kafka Server started"; do sleep 1; done' || \
	  (echo "Kafka failed to start within $(STARTUP_TIMEOUT) seconds"; exit 1)
	@echo "Kafka started."; \
	docker logs -f $(CONTAINER_NAME)

stop:
	@echo "Gracefully stopping Kafka..."
	@-docker exec $(CONTAINER_NAME) opt/kafka/bin/kafka-server-stop.sh || true
	@sleep 5
	@-docker stop $(CONTAINER_NAME) 2>/dev/null || true
	@-docker rm $(CONTAINER_NAME) 2>/dev/null || true
	@echo "Kafka container stopped (container preserved)"

clean: stop
	@echo "Performing full cleanup..."
	@-docker rm -f $(CONTAINER_NAME) 2>/dev/null || true
	@-docker volume rm $(KAFKA_DATA_VOLUME) 2>/dev/null || true
	@echo "Cleanup completed"

check:
	@echo "Checking Kafka status..."
	@docker exec $(CONTAINER_NAME) \
	  $(KAFKA_BIN_DIR)/kafka-broker-api-versions.sh \
	  --bootstrap-server localhost:9092

topics:
	@echo "Listing all Kafka topics..."
	@docker exec $(CONTAINER_NAME) \
		$(KAFKA_BIN_DIR)/kafka-topics.sh \
		--list \
		--bootstrap-server localhost:9092